{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "appPrefix": {
      "type": "string",
      "defaultValue": "apimval",
      "minLength": 3,
      "maxLength": 20
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "functionToStorageRoleNameGuid": {
       "type": "string",
       "defaultValue": "[newGuid()]"
    },
     "functionToEventGridTopicRoleNameGuid": {
       "type": "string",
       "defaultValue": "[newGuid()]"
    },
    "apimServiceName": {
       "type": "string"
    },
    "connections_visualstudioteamservices_name": {
        "type": "string",
         "defaultValue": "visualstudioteamservices"
    }
  },
   "variables": {
    "storageAccountName": "[concat(parameters('appPrefix'), uniqueString(resourceGroup().id))]",
    "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
    "functionAppName": "[concat(parameters('appPrefix'), '-' ,uniqueString(resourceGroup().id),'-function-app')]",
    "appInsightsname": "[concat(parameters('appPrefix'), '-' ,uniqueString(resourceGroup().id), '-app-insights')]",
    "apimServiceExceptionsTopicName":  "[concat(parameters('apimServiceName'), '-exceptions-topic')]",
     "apimServiceExceptionLogicAppName":  "[concat(parameters('apimServiceName'), '-exceptions-logic-app')]"

  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true
      },
      "resources": [
      ]
    },
    {
        "apiVersion": "2015-05-01",
        "name": "[variables('appInsightsName')]",
        "type": "Microsoft.Insights/components",
        "kind": "web",
        "location": "[resourceGroup().location]",
        "tags": {
            "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('functionAppName'))]": "Resource"
        },
        "properties": {
            "Application_Type": "web",
            "ApplicationId": "[variables('appInsightsName')]"
        }
    },
    {
        "apiVersion": "2015-08-01",
        "type": "Microsoft.Web/sites",
        "name": "[variables('functionAppName')]",
        "location": "[resourceGroup().location]",
        "identity": {
            "type": "SystemAssigned"
        },
        "kind": "functionapp",
        "properties": {
            "siteConfig": {
                "appSettings": [
                    {
                        "name": "AzureWebJobsStorage",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2019-06-01').keys[0].value)]"
                    },
                    {
                        "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2019-06-01').keys[0].value)]"
                    },
                    {
                        "name": "WEBSITE_CONTENTSHARE",
                        "value": "[concat(variables('functionAppName'), uniqueString(resourceGroup().id))]"
                    },
                    {
                        "name": "STORAGE_ACCOUNT_NAME",
                        "value": "[variables('storageAccountName')]"
                    },
                    {
                        "name": "STORAGE_ACCOUNT_KEY",
                        "value": "[listKeys(variables('storageAccountId'),'2019-06-01').keys[0].value]"
                    },
                    {
                        "name": "FUNCTIONS_WORKER_RUNTIME",
                        "value": "dotnet"
                    },
                    {
                        "name": "WEBSITE_ENABLE_SYNC_UPDATE_SITE",
                        "value": "true"
                    },
                    {
                        "name": "FUNCTIONS_EXTENSION_VERSION",
                        "value": "~3"
                    },
                    {
                        "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                        "value": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
                    }
                    // {
                    //     "name": "APIM_EXCEPTIONS_TOPIC_ENDPOINT",
                    //     "value": "[reference(resourceId('Microsoft.EventGrid/topics/', variables('apimServiceExceptionsTopicName')), '2021-12-01').EndPoint]"
                    // }
                ]
            }
        },
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
            "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
           // "[resourceId('Microsoft.EventGrid/topics', variables('apimServiceExceptionsTopicName'))]"
        ],
        "resources": [
            // {
            //     "apiVersion": "2015-08-01",
            //     "name": "web",
            //     "type": "sourcecontrols",
            //     "dependsOn": [
            //          "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
            //     ],
            //     "properties": {
            //         "repoUrl": "https://github.com/jmasengeshomsft/apim-validator.git",
            //         "branch": "main",
            //         "publishRunbook": true,
            //         "IsManualIntegration": true
            //     }
            // }
        ]
    },
    {
        "type": "Microsoft.Authorization/roleAssignments",
        "apiVersion": "2020-04-01-preview",
        "name": "[parameters('functionToStorageRoleNameGuid')]",
        "scope": "[concat('Microsoft.Storage/storageAccounts', '/', variables('storageAccountName'))]",
        "properties": {
            "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
            "principalId":  "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')),'2020-06-01', 'Full').identity.principalId]",
            "principalType": "ServicePrincipal"
        },
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
        ]
    },
    // {
    //     "type": "Microsoft.Resources/deployments",
    //     "apiVersion": "2021-04-01",
    //     "name": "nestedTemplateDeploySystemTopic",
    //     "resourceGroup": "[parameters('apimServiceNameResourceGroup')]",
    //     // "subscriptionId": "[parameters('secondSubscriptionID')]",
    //     "properties": {
    //         "mode": "Incremental",
    //         "template": {
    //             "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    //             "contentVersion": "1.0.0.0",
    //             "parameters": {},
    //             "variables": {},
    //             "resources": [
    //                 {
    //                    "name": "[parameters('apimServiceEventTopicName')]",
    //                     "type": "Microsoft.EventGrid/systemTopics",
    //                     "apiVersion": "2021-06-01-preview",
    //                     "location": "[parameters('location')]",
    //                     "dependsOn": [
    //                         "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
    //                     ],
    //                     "properties": {
    //                         "source": "[resourceID('Microsoft.ApiManagement/service', parameters('apimServiceName'))]",
    //                         "topicType": "Microsoft.ApiManagement.Service"
    //                     }
    //                 }
    //             ]
    //         },
    //         "parameters": {}
    //     }
    // },
    {
        "name": "[parameters('apimServiceName')]",
        "type": "Microsoft.EventGrid/systemTopics",
        "apiVersion": "2021-06-01-preview",
        "location": "[parameters('location')]",
        "dependsOn": [
             "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
        ],
        "properties": {
            "source": "[resourceId('Microsoft.ApiManagement/service', parameters('apimServiceName'))]",
            "topicType": "Microsoft.ApiManagement.Service"
        }
    },
    {
        "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
        "apiVersion": "2021-12-01",
        "name": "[concat(parameters('apimServiceName'), '/', variables('functionAppName'))]",
        "dependsOn": [
              "[resourceId('Microsoft.EventGrid/systemTopics', parameters('apimServiceName'))]",
              "[resourceId('Microsoft.Web/sites/sourcecontrols', variables('functionAppName'), 'web')]"
        ],
        "properties": {
            "destination": {
                "properties": {
                    // "name": "[variables('functionAppName')]",
                    // "endpointUrl": "[parameters('endpoint')]",
                    "maxEventsPerBatch": 1,
                    "preferredBatchSizeInKilobytes": 64,
                    //"resourceId" : "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
                    "resourceId": "[concat(resourceId('Microsoft.Web/sites', variables('functionAppName')), '/functions/OnUpdateValidateRateLimit')]"
                },
                "endpointType": "AzureFunction"
            },
            "filter": {
                "includedEventTypes": [
                    "Microsoft.ApiManagement.APICreated",
                    "Microsoft.ApiManagement.APIUpdated"
                ],
                "enableAdvancedFilteringOnArrays": true
            },
             "labels": [],
                "eventDeliverySchema": "EventGridSchema",
                "retryPolicy": {
                    "maxDeliveryAttempts": 30,
                    "eventTimeToLiveInMinutes": 1440
                }
        }
    },
    {
        "type": "Microsoft.EventGrid/topics",
        "apiVersion": "2021-12-01",
        "name": "[variables('apimServiceExceptionsTopicName')]",
        "location": "[parameters('location')]",
        "identity": {
            "type": "SystemAssigned"
        },
        "properties": {
            "inputSchema": "EventGridSchema",
            "publicNetworkAccess": "Enabled",
            "disableLocalAuth": false
        }
    },
    {
        "type": "Microsoft.Web/sites/config",
        "name": "[concat(variables('functionAppName'), '/appsettings')]",
        "apiVersion": "2021-02-01",
        "properties": {
            "APIM_EXCEPTIONS_TOPIC_ENDPOINT": "[reference(resourceId('Microsoft.EventGrid/topics', variables('apimServiceExceptionsTopicName')), '2021-12-01').EndPoint]",
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2019-06-01').keys[0].value)]",
            "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2019-06-01').keys[0].value)]",
            "WEBSITE_CONTENTSHARE": "[concat(variables('functionAppName'), uniqueString(resourceGroup().id))]",
            "STORAGE_ACCOUNT_NAME": "[variables('storageAccountName')]",
            "STORAGE_ACCOUNT_KEY": "[listKeys(variables('storageAccountId'),'2019-06-01').keys[0].value]",
            "FUNCTIONS_WORKER_RUNTIME": "dotnet",
            "WEBSITE_ENABLE_SYNC_UPDATE_SITE": "true",
            "FUNCTIONS_EXTENSION_VERSION": "~3",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
        },
        "dependsOn": [ 
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
            "[resourceId('Microsoft.EventGrid/topics', variables('apimServiceExceptionsTopicName'))]"
        ]
    },
    {
        "apiVersion": "2021-02-01",
        "name": "[concat(variables('functionAppName'), '/', 'web')]",
        "type": "Microsoft.Web/sites/sourcecontrols",
        "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
            "[resourceId('Microsoft.Web/sites/config', variables('functionAppName'), 'appsettings')]"
        ],
        "properties": {
            "repoUrl": "https://github.com/jmasengeshomsft/apim-validator.git",
            "branch": "main",
            "publishRunbook": true,
            "IsManualIntegration": true
        }
    },
    {
        "type": "Microsoft.Authorization/roleAssignments",
        "apiVersion": "2020-04-01-preview",
        "name": "[parameters('functionToEventGridTopicRoleNameGuid')]",
        "scope": "[concat('Microsoft.EventGrid/topics', '/', variables('apimServiceExceptionsTopicName'))]",
        "properties": {
            "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'd5a91429-5739-47e2-a06b-3470a27159e7')]",
            "principalId":  "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')),'2020-06-01', 'Full').identity.principalId]",
            "principalType": "ServicePrincipal"
        },
        "dependsOn": [
            "[resourceId('Microsoft.EventGrid/topics', variables('apimServiceExceptionsTopicName'))]",
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
        ]
    },
    {
        "type": "Microsoft.EventGrid/eventSubscriptions",
        "apiVersion": "2020-06-01",
        "name": "[variables('apimServiceExceptionLogicAppName')]",
        "scope": "[format('Microsoft.EventGrid/topics/{0}', variables('apimServiceExceptionsTopicName'))]",
        "dependsOn": [
            "[resourceId('Microsoft.EventGrid/topics', variables('apimServiceExceptionsTopicName'))]",
            "[resourceId('Microsoft.Logic/workflows', variables('apimServiceExceptionLogicAppName'))]"
        ],
        "properties": {
            "destination": {
                "properties": {
                    "endpointUrl": "[listCallbackURL(concat(resourceId('Microsoft.Logic/workflows/', variables('apimServiceExceptionLogicAppName')), '/triggers/manual'), '2016-06-01').value]"
                },
                "endpointType": "WebHook"
            }
        }
    },
    {
        "type": "Microsoft.Web/connections",
        "apiVersion": "2016-06-01",
        "name": "[parameters('connections_visualstudioteamservices_name')]",
        "location": "centralus",
        "kind": "V1",
        "properties": {
            "displayName": "jmasengesho@microsoft.com",
            "statuses": [
                {
                    "status": "Connected"
                }
            ],
            "customParameterValues": {},
            "nonSecretParameterValues": {},
            "createdTime": "2021-11-17T00:31:02.9562698Z",
            "changedTime": "2021-11-21T23:28:20.2548448Z",
            "api": {
                "name": "[parameters('connections_visualstudioteamservices_name')]",
                "displayName": "Azure DevOps",
                "description": "Azure DevOps provides services for teams to share code, track work, and ship software - for any language, all in a single package. It's the perfect complement to your IDE.",
                "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1528/1.0.1528.2589/vsts/icon.png",
                "brandColor": "#0078d7",
                "id": "[concat('/subscriptions/b79b3641-f295-4473-b807-e858d16b195b/providers/Microsoft.Web/locations/centralus/managedApis/', parameters('connections_visualstudioteamservices_name'))]",
                "type": "Microsoft.Web/locations/managedApis"
            },
            "testLinks": [
                {
                    "requestUri": "[concat('https://management.azure.com:443/subscriptions/b79b3641-f295-4473-b807-e858d16b195b/resourceGroups/apim-validator-demo/providers/Microsoft.Web/connections/', parameters('connections_visualstudioteamservices_name'), '/extensions/proxy/_apis/Accounts?api-version=2016-06-01')]",
                    "method": "get"
                }
            ]
        }
    },
    {
        "type": "Microsoft.Logic/workflows",
        "apiVersion": "2017-07-01",
        "name": "[variables('apimServiceExceptionLogicAppName')]",
        "location": "[parameters('location')]",
        "identity": {
            "type": "SystemAssigned"
        },
        "dependsOn": [
            "[resourceId('Microsoft.Web/connections', parameters('connections_visualstudioteamservices_name'))]"
        ],
        "properties": {
            "state": "Enabled",
            "definition": {
                "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                    "$connections": {
                        "defaultValue": {},
                        "type": "Object"
                    }
                },
                "triggers": {
                    "manual": {
                        "type": "Request",
                        "kind": "Http",
                        "inputs": {
                            "schema": {
                                "items": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "ExceptionMessage": {
                                                    "type": "string"
                                                },
                                                "PolicyFormat": {
                                                    "type": "string"
                                                },
                                                "PolicyName": {
                                                    "type": "string"
                                                },
                                                "PolicyValue": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "dataVersion": {
                                            "type": "string"
                                        },
                                        "eventTime": {
                                            "type": "string"
                                        },
                                        "eventType": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "metadataVersion": {
                                            "type": "string"
                                        },
                                        "subject": {
                                            "type": "string"
                                        },
                                        "topic": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "subject",
                                        "data",
                                        "eventType",
                                        "dataVersion",
                                        "metadataVersion",
                                        "eventTime",
                                        "topic"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        }
                    }
                },
                "actions": {
                    "For_each": {
                        "foreach": "@triggerBody()",
                        "actions": {
                            "Create_a_work_item": {
                                "runAfter": {},
                                "type": "ApiConnection",
                                "inputs": {
                                    "body": {
                                        "description": "The API Policy content is : @{items('For_each')?['data']?['PolicyValue']}",
                                        "title": "@items('For_each')['subject']"
                                    },
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['visualstudioteamservices']['connectionId']"
                                        }
                                    },
                                    "method": "patch",
                                    "path": "/@{encodeURIComponent('CLIENT-DEMOS')}/_apis/wit/workitems/$@{encodeURIComponent('issue')}",
                                    "queries": {
                                        "account": "jmasenMSFT"
                                    }
                                }
                            }
                        },
                        "runAfter": {},
                        "type": "Foreach"
                    }
                },
                "outputs": {}
            },
            "parameters": {
                "$connections": {
                    "value": {
                        "visualstudioteamservices": {
                            "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_visualstudioteamservices_name'))]",
                            "connectionName": "visualstudioteamservices",
                            "id": "/subscriptions/b79b3641-f295-4473-b807-e858d16b195b/providers/Microsoft.Web/locations/centralus/managedApis/visualstudioteamservices"
                        }
                    }
                }
            }
        }
    }
  ]
}